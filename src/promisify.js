function promisify(f) {
	return function (...args) {
		// возвращает функцию-обёртку

		// предполагается что промисифицируемая фукнция f принимает последним аргументом коллбэк
		// вметсо нее мы возвращаем функцию, которая будет вызываться без коллбэка, а коллбэк мы формируем сами автоматически
		// и делаем так, что это коллбэк будет передаваться последним аргументом (т.е. фактические аргументы скоторыми вызывается промисифицируемая функция,
		// формирутся из принятых нами аргументов функции-обертки + наш коллбэк. Потом вы вызываем промисифицируемую фукнцию, она выполняет коллбэк и как полагается передает в него результат или ошибку)
		// а наш коллбэк не будь дурак, дергает reolve или reject и возвращает промис, который и становится резлуьтом вызова функции-обертки (коллбэк берут из замыкания resolve / reject)

		return new Promise((resolve, reject) => {
			function callback(err, result) {
				// наш специальный колбэк для f
				if (err) {
					reject(err);
				} else {
					resolve(result);
				}
			}

			args.push(callback); // добавляем колбэк в конец аргументов f

			f.call(this, ...args); // вызываем оригинальную функцию
		});
	};
}